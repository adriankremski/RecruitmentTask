// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlinVersion = '1.3.31'

    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.0-beta04'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

    }
}

allprojects {
    repositories {
        google()
        jcenter()

    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {
    //VERSIONS
    androidMinSdkVersion = 21
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28
    coroutinesVersion = "1.3.0-M1"
    roomVersion = '2.1.0-alpha04'
    koinVersion = "2.0.1"
    navVersion = "2.1.0-alpha05"
    appCompatVersion = "1.0.2"
    lifecycleVersion = "2.2.0-alpha01"
    retrofitVersion = '2.6.0'
    gsonVersion = '2.8.5'
    okHttpVersion = '3.14.2'
    jUnitVersion = '4.12'
    assertJVersion = '3.8.0'
    mockitoKotlinVersion = '2.1.0'

    //LIBRARIES
    coroutinesCore = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    coroutinesAndroid = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    koinCore = "org.koin:koin-core:$koinVersion"
    koinCoreExt = "org.koin:koin-core-ext:$koinVersion"
    koinAndroid = "org.koin:koin-android:$koinVersion"
    lifecycleRuntime = "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    lifecycleExtensions = "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    lifecycleCompiler = "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"
    jodaTime = 'net.danlew:android.joda:2.10.1.2'
    pdfPreview = 'es.voghdev.pdfviewpager:library:1.0.6'
    gson = "com.google.code.gson:gson:$gsonVersion"
    junit = "junit:junit:$jUnitVersion"
    mockito = "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    assertj = "org.assertj:assertj-core:$assertJVersion"

    //DEPENDENCIES
    mobileDependencies = [
            koinCore            : koinCore,
            koinCoreExt         : koinCoreExt,
            jodaTime            : jodaTime,
            koinAndroid         : "org.koin:koin-android:$koinVersion",
            koinAndroidScope    : "org.koin:koin-android-scope:$koinVersion",
            koinAndroidViewModel: "org.koin:koin-android-viewmodel:$koinVersion",
            constraintLayout    : "androidx.constraintlayout:constraintlayout:2.0.0-alpha2",
            navigationFragment  : "androidx.navigation:navigation-fragment-ktx:$navVersion",
            navigationUi        : "androidx.navigation:navigation-ui-ktx:$navVersion",
            adapterDelegates    : 'com.hannesdorfmann:adapterdelegates4:4.0.0',
            appCompat           : "androidx.appcompat:appcompat:$appCompatVersion",
            coreKtx             : "androidx.core:core-ktx:$appCompatVersion",
            fragmentKtx         : "androidx.fragment:fragment-ktx:1.1.0-alpha09",
            pdfPreview          : pdfPreview,
            kotlin              : kotlin,
            coroutinesCore      : coroutinesCore,
            coroutinesAndroid   : coroutinesAndroid,
            lifecycleRuntime    : lifecycleRuntime,
            commonsIo           : "commons-io:commons-io:2.6"
    ]

    domainDependencies = [
            coroutinesCore: coroutinesCore,
            koinCore      : koinCore,
            koinCoreExt   : koinCoreExt,
            kotlin        : kotlin
    ]

    domainTestDependencies = [
            junit  : junit,
            mockito: mockito,
            assertj: assertj
    ]

    dataDependencies = [
            kotlin        : kotlin,
            koinCore      : koinCore,
            koinCoreExt   : koinCoreExt,
            coroutinesCore: coroutinesCore
    ]

    dataTestDependencies = [
            junit  : junit,
            mockito: mockito,
            assertj: assertj
    ]

    remoteDependencies = [
            jodaTime         : jodaTime,
            kotlin           : kotlin,
            koinCore         : koinCore,
            koinCoreExt      : koinCoreExt,
            coroutinesCore   : coroutinesCore,
            okHttp           : "com.squareup.okhttp3:okhttp:$okHttpVersion",
            okHttpLogger     : "com.squareup.okhttp3:logging-interceptor:$okHttpVersion",
            retrofitConverter: "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            retrofit         : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            gson             : gson,
    ]

    cacheDependencies = [
            roomRuntime   : "androidx.room:room-runtime:$roomVersion",
            roomCompiler  : "androidx.room:room-compiler:$roomVersion",
            roomCoroutines: "androidx.room:room-coroutines:$roomVersion",
            koinCore      : koinCore,
            koinCoreExt   : koinCoreExt,
            kotlin        : kotlin,
            coroutinesCore: coroutinesCore,
    ]

    presentationDependencies = [
            kotlin              : kotlin,
            koinCore            : koinCore,
            koinCoreExt         : koinCoreExt,
            koinAndroidViewModel: "org.koin:koin-android-viewmodel:$koinVersion",
            coroutinesCore      : coroutinesCore,
            coroutinesAndroid   : coroutinesAndroid,
            lifecycleViewModel  : "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
            lifecycleExtensions : lifecycleExtensions,
            lifecycleRuntime    : lifecycleRuntime,
            lifecycleCompiler   : lifecycleCompiler
    ]

}
